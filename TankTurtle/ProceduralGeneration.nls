patches-own
[
  gridNumber
]
 
to setup
 
clear-all
 
generate-map
 
reset-ticks
 
end
 
;This method is triggered by the setup button being pressed
;and generates our game level for us. It does the following:
;Calls the clear-screen method to make sure that we're working
;with a blank canvas.
;Sections off the screen into a 3x3 grid, to give us the slots
;where our pseudo-randomly generated tiles will slot into.
;Defines the 9 random tiles that will combine to create the
;game level by calling a method that does this for us.
;Then all the patches are polled by the program. This is where,
;depending on which tile it has been assigned to, the tiles are
;"loaded" in randomly, i.e. the patch colours are changed to
;generate our map.
to generate-map
 
  clear-screen
 
  set-grid-number
 
  let chosenTile1 calc-tile
  let chosenTile2 calc-tile
  let chosenTile3 calc-tile
  let chosenTile4 calc-tile
  let chosenTile5 calc-tile
  let chosenTile6 calc-tile
  let chosenTile7 calc-tile
  let chosenTile8 calc-tile
  let chosenTile9 calc-tile
 
  ask patches
  [
   
   if gridNumber = 1
   [
     load-tile chosenTile1 0 0
   ]
   
   if gridNumber = 2
   [
     load-tile chosenTile2 12 0
   ]
   
   if gridNumber = 3
   [
     load-tile chosenTile3 24 0
   ]
   
   if gridNumber = 4
   [
     load-tile chosenTile4 0 12
   ]
   if gridNumber = 5
   [
     load-tile chosenTile5 12 12
   ]
   if gridNumber = 6
   [
    load-tile chosenTile6 24 12
   ]
   if gridNumber = 7
   [
    load-tile chosenTile7 0 24
   ]
   if gridNumber = 8
   [
     load-tile chosenTile8 12 24
   ]
   if gridNumber = 9
   [
     load-tile chosenTile9 24 24
   ]
  ]
 
  place-ammo
  place-fuel
  place-player-spawn
  place-enemy-spawns
  place-slow-tiles
 
  reset-ticks
 
end
 
;This method, based upon where the patches exist in coordinate space,
;sets the variable gridNumber to be the slot in the grid which the
;patch belongs to.
 
to set-grid-number
  ask patches
  [    
   if pxcor < 12 and pycor <= 12 ;bottom left tile
   [
     set gridNumber 1
   ]
   if pxcor >= 12 and pxcor <= 24 and pycor <= 12 ;bottom middle tile
   [
     set gridNumber 2
   ]
   if pxcor > 24 and pycor <= 12 ;bottom right tile
   [
    set gridNumber 3
   ]
   if pxcor < 12 and pycor > 12 and pycor <= 24 ;middle left
   [
    set gridNumber 4
   ]
   if pxcor >= 12 and pxcor <= 24 and pycor > 12 and pycor <= 24 ;middle tile
   [
     set gridNumber 5
   ]
   if pxcor > 24 and pycor > 12 and pycor <= 24 ;middle right tile
   [
    set gridNumber 6
   ]
   if pxcor < 12 and pycor > 24 ;top left tile
   [
    set gridNumber 7
   ]
   if pxcor >= 12 and pxcor <= 24 and pycor > 24 ;top middle tile
   [
    set gridNumber 8
   ]
   if pxcor > 24 and pycor > 24 ;top right tile
   [
    set gridNumber 9
   ]
  ]
 
end
 
;This is the random number generator that decides which tile will be
;loaded. Based upon what number this method generates, the tile corresponding
;to it will load. For example, 0 will load tile-1, 1 will load tile-2, etc.
to-report calc-tile
 
  random-seed new-seed
  let chance random 16
 
  report chance
 
end
 
;This method loads the tile into its chosen slot, based upon
;the value of the chosenTile variable passed into the method.
;This method will call the defined-tile method corresponding to
;the needed tile, as well as its x and y offset, making sure that
;it will load into the correct place in the scene.
to load-tile [chosenTile xoff yoff]
 
  if (chosenTile = 0)
    [
     defined-tile-1 xoff yoff
    ]
    if (chosenTile = 1)
    [
     defined-tile-2 xoff yoff
    ]
    if (chosenTile = 2)
    [
     defined-tile-3 xoff yoff
    ]
    if (chosenTile = 3)
    [
     defined-tile-4 xoff yoff
    ]
    if (chosenTile = 4)
    [
     defined-tile-5 xoff yoff
    ]
    if (chosenTile = 5)
    [
      defined-tile-6 xoff yoff
    ]
    if (chosenTile = 6)
    [
     defined-tile-7 xoff yoff
    ]
    if (chosenTile = 7)
    [
     defined-tile-8 xoff yoff  
    ]
    if (chosenTile = 8)
    [
     defined-tile-9 xoff yoff
    ]
    if (chosenTile = 9)
    [
     defined-tile-10 xoff yoff
    ]
    if (chosenTile = 10)
    [
     defined-tile-11 xoff yoff
    ]
    if (chosenTile = 11)
    [
     defined-tile-12 xoff yoff
    ]
    if (chosenTile = 12)
    [
     defined-tile-13 xoff yoff
    ]
    if (chosenTile = 13)
    [
      defined-tile-14 xoff yoff
    ]
    if (chosenTile = 14)
    [
     defined-tile-15 xoff yoff
    ]
    if (chosenTile = 15)
    [
     defined-tile-16 xoff yoff
    ]
 
end
 
 
;This method will randomly spawn positions where ammo will
;appear within the game world. This will randomly place 4
;ammo spawns across the game, only placing them on an available patch
;that isn't taken up by an obstacle. Due to the method being semi-random
;this also keep the game different every time.
to place-ammo
 
  let xcord random-pxcor
  let ycord random-pycor
 
  let no-of-ammo-spawns 4
  let no-of-ammo-spawned 0
 
  while [no-of-ammo-spawned < no-of-ammo-spawns]
  [
    ask patches
    [
     if (pcolor = white)
     [
      ifelse (pxcor = xcord and pycor = ycord)
      [
        set pcolor green
        set no-of-ammo-spawned no-of-ammo-spawned + 1
      ]
      [
       set xcord random-pxcor
       set ycord random-pycor
      ]
     ]
    ]
  ]
   
end
 
;This method will randomly spawn positions where fuel will
;appear within the game world. This will randomly place 4
;fuel spawns across the game, only placing them on an available patch
;that isn't taken up by an obstacle. Due to the method being semi-random
;this also keep the game different every time.
to place-fuel
 
  let xcord random-pxcor
  let ycord random-pycor
 
  let no-of-fuel-spawns 4
  let no-of-fuel-spawned 0
 
  while [no-of-fuel-spawned < no-of-fuel-spawns]
  [
    ask patches
    [
     if (pcolor = white)
     [
      ifelse (pxcor = xcord and pycor = ycord)
      [
        set pcolor black
        set no-of-fuel-spawned no-of-fuel-spawned + 1
      ]
      [
       set xcord random-pxcor
       set ycord random-pycor
      ]
     ]
    ]
  ]
 
end
 
 
;This method draws an obstacle (definied as a red patch) where
;the tile requires it to be on-screen. Obstacles are drawn based
;upon the coordinate of the patch being checked, and their offsets.
to draw-obstacle [patchxcor xoff xcord patchycor yoff ycord]
 
  if ((patchxcor - xoff = xcord) and (patchycor - yoff = ycord))
    [
     set pcolor red
    ]
 
end
 
;This method generates a random x and y coordinate and, after polling
;the patches, places the spawn for the player in a valid location (i.e
;in a patch that is white). This is randomly generated, so this
;will change each time the game has run.
to place-player-spawn
 
  let xcord random-pxcor
  let ycord random-pycor
 
  let no-of-players-spawned 0
 
   ask patches with [pcolor = white]
   [
    if (no-of-players-spawned = 0)
    [
      if (pxcor = xcord and pycor = ycord)
      [
        set pcolor blue
        set no-of-players-spawned 1
      ]
     ]
    ]
 
end
 
;This method will randomly spawn positions where enemy spawns will
;appear within the game world. This will randomly place 4
;enemy spawns across the game, only placing them on an available patch
;that isn't taken up by an obstacle. Due to the method being semi-random
;this also keep the game different every time.
to place-enemy-spawns
 
  let xcord random-pxcor
  let ycord random-pycor
 
  let no-of-enemy-spawns 1
  let no-of-enemies-spawned 0
 
  while [no-of-enemies-spawned < no-of-enemy-spawns]
  [
    ask patches
    [
     if (pcolor = white)
     [
      ifelse (pxcor = xcord and pycor = ycord)
      [
        set pcolor yellow
        set no-of-enemies-spawned no-of-enemies-spawned + 1
      ]
      [
       set xcord random-pxcor
       set ycord random-pycor
      ]
     ]
    ]
  ]
   
end
 
to place-slow-tiles
 
  let xcord random-pxcor
  let ycord random-pycor
 
  let no-of-slow-tiles 30
  let no-of-slow-tiles-spawned 0
 
  while [no-of-slow-tiles-spawned < no-of-slow-tiles]
  [
    ask patches
    [
     if (pcolor = white)
     [
      ifelse (pxcor = xcord and pycor = ycord)
      [
        set pcolor grey
        set no-of-slow-tiles-spawned no-of-slow-tiles-spawned + 1
      ]
      [
       set xcord random-pxcor
       set ycord random-pycor
      ]
     ]
    ]
  ]
   
end
 
;Holds the definition of tile-1.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(2,2) (5,1) (6,1) (9,2) (2,5) (5,5) (6,5) (9,5) (2,6) (5,6) (6,6)
;(9,6) (2,9) (9,9) (5,10) (6,10)
 
to defined-tile-1 [xoff yoff]
 
  set pcolor white
 
  draw-obstacle pxcor xoff 2 pycor yoff 2
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 9 pycor yoff 2
  draw-obstacle pxcor xoff 2 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 9 pycor yoff 5
  draw-obstacle pxcor xoff 2 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 9 pycor yoff 6
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
 
end
 
;Holds the definition of tile-2.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(5,1) (6,1) (2,2) (3,2) (5,2) (6,2) (8,2) (9,2) (2,3) (9,3) (2,4)
;(9,4) (5,5) (6,5) (5,6) (6,6) (2,7) (9,7) (2,8) (9,8) (2,9) (3,9)
;(5,9) (6,9) (8,9) (9,9) (5,10) (6,10)
to defined-tile-2 [xoff yoff]
 
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 2 pycor yoff 2
  draw-obstacle pxcor xoff 3 pycor yoff 2
  draw-obstacle pxcor xoff 5 pycor yoff 2
  draw-obstacle pxcor xoff 6 pycor yoff 2
  draw-obstacle pxcor xoff 8 pycor yoff 2
  draw-obstacle pxcor xoff 9 pycor yoff 2
  draw-obstacle pxcor xoff 2 pycor yoff 3
  draw-obstacle pxcor xoff 9 pycor yoff 3
  draw-obstacle pxcor xoff 2 pycor yoff 4
  draw-obstacle pxcor xoff 9 pycor yoff 4
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 2 pycor yoff 7
  draw-obstacle pxcor xoff 9 pycor yoff 7
  draw-obstacle pxcor xoff 2 pycor yoff 8
  draw-obstacle pxcor xoff 9 pycor yoff 8
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 3 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 9
  draw-obstacle pxcor xoff 6 pycor yoff 9
  draw-obstacle pxcor xoff 8 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
 
end
 
;Holds the definition of tile-3.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(3,2) (4,2) (7,2) (8,2) (3,3) (4,3) (7,3) (8,3) (3,4) (4,4) (5,4)
;(6,4) (7,4) (8,4) (3,5) (4,5) (5,5) (6,5) (7,5) (8,5) (3,6) (4,6)
;(5,6) (6,6) (7,6) (8,6) (3,7) (4,7) (5,7) (6,7) (7,7) (8,7) (3,8)
;(4,8) (5,8) (6,8) (7,8) (8,8) (3,9) (4,9) (7,9) (8,9) (3,10) (4,10)
;(7,10) (8,10)
to defined-tile-3 [xoff yoff]
 
  draw-obstacle pxcor xoff 3 pycor yoff 2
  draw-obstacle pxcor xoff 4 pycor yoff 2
  draw-obstacle pxcor xoff 7 pycor yoff 2
  draw-obstacle pxcor xoff 8 pycor yoff 2
  draw-obstacle pxcor xoff 3 pycor yoff 3
  draw-obstacle pxcor xoff 4 pycor yoff 3
  draw-obstacle pxcor xoff 7 pycor yoff 3
  draw-obstacle pxcor xoff 8 pycor yoff 3
  draw-obstacle pxcor xoff 3 pycor yoff 4
  draw-obstacle pxcor xoff 4 pycor yoff 4
  draw-obstacle pxcor xoff 5 pycor yoff 4
  draw-obstacle pxcor xoff 6 pycor yoff 4
  draw-obstacle pxcor xoff 7 pycor yoff 4
  draw-obstacle pxcor xoff 8 pycor yoff 4
  draw-obstacle pxcor xoff 3 pycor yoff 5
  draw-obstacle pxcor xoff 4 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 7 pycor yoff 5
  draw-obstacle pxcor xoff 8 pycor yoff 5
  draw-obstacle pxcor xoff 3 pycor yoff 6
  draw-obstacle pxcor xoff 4 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 7 pycor yoff 6
  draw-obstacle pxcor xoff 8 pycor yoff 6
  draw-obstacle pxcor xoff 3 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 5 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 7 pycor yoff 7
  draw-obstacle pxcor xoff 8 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 5 pycor yoff 8
  draw-obstacle pxcor xoff 6 pycor yoff 8
  draw-obstacle pxcor xoff 7 pycor yoff 8
  draw-obstacle pxcor xoff 8 pycor yoff 8
  draw-obstacle pxcor xoff 3 pycor yoff 9
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 9
  draw-obstacle pxcor xoff 8 pycor yoff 9
  draw-obstacle pxcor xoff 3 pycor yoff 10
  draw-obstacle pxcor xoff 4 pycor yoff 10
  draw-obstacle pxcor xoff 7 pycor yoff 10
  draw-obstacle pxcor xoff 8 pycor yoff 10
 
end
 
;Holds the definition of tile-4.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(2,2) (9,2) (5,3) (6,3) (2,5) (9,5) (2,6) (9,6) (5,7) (6,7) (2,9)
;(9,9)
to defined-tile-4 [xoff yoff]
 
  draw-obstacle pxcor xoff 2 pycor yoff 2
  draw-obstacle pxcor xoff 9 pycor yoff 2
  draw-obstacle pxcor xoff 5 pycor yoff 3
  draw-obstacle pxcor xoff 6 pycor yoff 3
  draw-obstacle pxcor xoff 2 pycor yoff 5
  draw-obstacle pxcor xoff 9 pycor yoff 5
  draw-obstacle pxcor xoff 2 pycor yoff 6
  draw-obstacle pxcor xoff 9 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
 
end
 
;Holds the definition of tile-5.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(5,1) (6,1) (2,2) (9,2) (3,5) (8,5) (3,6) (8,6) (2,9) (9,9) (5,10)
;(6,10)
to defined-tile-5 [xoff yoff]
 
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 2 pycor yoff 2
  draw-obstacle pxcor xoff 9 pycor yoff 2
  draw-obstacle pxcor xoff 3 pycor yoff 5
  draw-obstacle pxcor xoff 8 pycor yoff 5
  draw-obstacle pxcor xoff 3 pycor yoff 6
  draw-obstacle pxcor xoff 8 pycor yoff 6
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
 
end
 
;Holds the definition of tile-6.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(1,1) (10,1) (3,3) (8,3) (5,5) (6,5) (5,6) (6,6) (3,8) (8,8) (1,10)
;(10,10)
to defined-tile-6 [xoff yoff]
 
  draw-obstacle pxcor xoff 1 pycor yoff 1
  draw-obstacle pxcor xoff 10 pycor yoff 1
  draw-obstacle pxcor xoff 3 pycor yoff 3
  draw-obstacle pxcor xoff 8 pycor yoff 3
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 3 pycor yoff 8
  draw-obstacle pxcor xoff 8 pycor yoff 8
  draw-obstacle pxcor xoff 1 pycor yoff 10
  draw-obstacle pxcor xoff 10 pycor yoff 10
 
end
 
;Holds the definition of tile-7.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(0,0) (1,0) (2,0) (3,0) (0,1) (1,1) (2,1) (3,1) (9,0) (10,0) (11,0)
;(9,1) (10,1) (11,1) (4,5) (5,5) (6,5) (4,6) (5,6) (6,6) (4,7) (5,7)
;(6,7) (4,8) (5,8) (6,8) (4,9) (5,9) (6,9) (4,10) (5,10) (6,10)
; (4,11) (5,11) (6,11)
 
to defined-tile-7 [xoff yoff]
 
 
  draw-obstacle pxcor xoff 0 pycor yoff 0
  draw-obstacle pxcor xoff 1 pycor yoff 0
  draw-obstacle pxcor xoff 2 pycor yoff 0
  draw-obstacle pxcor xoff 3 pycor yoff 0
  draw-obstacle pxcor xoff 0 pycor yoff 1
  draw-obstacle pxcor xoff 1 pycor yoff 1
  draw-obstacle pxcor xoff 2 pycor yoff 1
  draw-obstacle pxcor xoff 3 pycor yoff 1
  draw-obstacle pxcor xoff 9 pycor yoff 0
  draw-obstacle pxcor xoff 10 pycor yoff 0
  draw-obstacle pxcor xoff 11 pycor yoff 0
  draw-obstacle pxcor xoff 9 pycor yoff 1
  draw-obstacle pxcor xoff 10 pycor yoff 1
  draw-obstacle pxcor xoff 11 pycor yoff 1
  draw-obstacle pxcor xoff 4 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 4 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 5 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 5 pycor yoff 8
  draw-obstacle pxcor xoff 6 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 9
  draw-obstacle pxcor xoff 6 pycor yoff 9
  draw-obstacle pxcor xoff 4 pycor yoff 10
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
  draw-obstacle pxcor xoff 4 pycor yoff 11
  draw-obstacle pxcor xoff 5 pycor yoff 11
  draw-obstacle pxcor xoff 6 pycor yoff 11
 
end
 
;Holds the definition of tile-8.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(6,1) (9,3) (3,4) (10,8) (1,9) (5,10) (6,10) (7,10)
to defined-tile-8 [xoff yoff]
 
 
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 9 pycor yoff 3
  draw-obstacle pxcor xoff 3 pycor yoff 4
  draw-obstacle pxcor xoff 10 pycor yoff 8
  draw-obstacle pxcor xoff 1 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
  draw-obstacle pxcor xoff 7 pycor yoff 10
 
end
 
;Holds the definition of tile-9.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(1,2) (6,2) (11,2) (2,3) (6,3) (10,3) (3,4) (4,4) (6,4) (8,4) (9,4)
;(3,5) (4,5) (6,5) (8,5) (9,5) (5,6) (6,6) (7,6) (3,7) (4,7) (6,7)
;(8,7) (9,7) (3,8) (4,8) (6,8) (8,8) (9,8) (2,9) (6,9) (10,9)
;(1,10) (6,10) (11,10)
to defined-tile-9 [xoff yoff]
 
  draw-obstacle pxcor xoff 1 pycor yoff 2
  draw-obstacle pxcor xoff 6 pycor yoff 2
  draw-obstacle pxcor xoff 11 pycor yoff 2
  draw-obstacle pxcor xoff 2 pycor yoff 3
  draw-obstacle pxcor xoff 6 pycor yoff 3
  draw-obstacle pxcor xoff 10 pycor yoff 3
  draw-obstacle pxcor xoff 3 pycor yoff 4
  draw-obstacle pxcor xoff 4 pycor yoff 4
  draw-obstacle pxcor xoff 6 pycor yoff 4
  draw-obstacle pxcor xoff 8 pycor yoff 4
  draw-obstacle pxcor xoff 9 pycor yoff 4
  draw-obstacle pxcor xoff 3 pycor yoff 5
  draw-obstacle pxcor xoff 4 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 8 pycor yoff 5
  draw-obstacle pxcor xoff 9 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 7 pycor yoff 6
  draw-obstacle pxcor xoff 3 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 8 pycor yoff 7
  draw-obstacle pxcor xoff 9 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 6 pycor yoff 8
  draw-obstacle pxcor xoff 8 pycor yoff 8
  draw-obstacle pxcor xoff 9 pycor yoff 8
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 6 pycor yoff 9
  draw-obstacle pxcor xoff 10 pycor yoff 9
  draw-obstacle pxcor xoff 1 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
  draw-obstacle pxcor xoff 11 pycor yoff 10
 
end
 
;Holds the definition of tile-10.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(5,3) (6,3) (5,4) (6,4) (5,5) (6,5) (5,6) (6,6) (5,7) (6,7)
;(5,8) (6,8) (3,9) (4,9) (5,9) (6,9) (7,9) (8,9)
to defined-tile-10 [xoff yoff]
 
  draw-obstacle pxcor xoff 5 pycor yoff 3
  draw-obstacle pxcor xoff 6 pycor yoff 3
  draw-obstacle pxcor xoff 5 pycor yoff 4
  draw-obstacle pxcor xoff 6 pycor yoff 4
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 5 pycor yoff 8
  draw-obstacle pxcor xoff 6 pycor yoff 8
  draw-obstacle pxcor xoff 3 pycor yoff 9
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 9
  draw-obstacle pxcor xoff 6 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 9
  draw-obstacle pxcor xoff 8 pycor yoff 9
 
end
 
;Holds the definition of tile-11.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(2,2) (3,2) (4,2) (5,2) (6,2) (7,2) (8,2) (9,2) (2,3) (9,3) (2,4)
;(9,4) (2,5) (5,5) (6,5) (9,5) (2,6) (5,6) (6,6) (9,6) (2,7) (9,7)
;(2,8) (9,8) (2,9) (9,9)
to defined-tile-11 [xoff yoff]
 
  draw-obstacle pxcor xoff 2 pycor yoff 2
  draw-obstacle pxcor xoff 3 pycor yoff 2
  draw-obstacle pxcor xoff 4 pycor yoff 2
  draw-obstacle pxcor xoff 5 pycor yoff 2
  draw-obstacle pxcor xoff 6 pycor yoff 2
  draw-obstacle pxcor xoff 7 pycor yoff 2
  draw-obstacle pxcor xoff 8 pycor yoff 2
  draw-obstacle pxcor xoff 9 pycor yoff 2
  draw-obstacle pxcor xoff 2 pycor yoff 3
  draw-obstacle pxcor xoff 9 pycor yoff 3
  draw-obstacle pxcor xoff 2 pycor yoff 4
  draw-obstacle pxcor xoff 9 pycor yoff 4
  draw-obstacle pxcor xoff 2 pycor yoff 5
  draw-obstacle pxcor xoff 5 pycor yoff 5
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 9 pycor yoff 5
  draw-obstacle pxcor xoff 2 pycor yoff 6
  draw-obstacle pxcor xoff 5 pycor yoff 6
  draw-obstacle pxcor xoff 6 pycor yoff 6
  draw-obstacle pxcor xoff 9 pycor yoff 6
  draw-obstacle pxcor xoff 2 pycor yoff 7
  draw-obstacle pxcor xoff 9 pycor yoff 7
  draw-obstacle pxcor xoff 2 pycor yoff 8
  draw-obstacle pxcor xoff 9 pycor yoff 8
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
 
end
 
;Holds the definition of tile-12.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(2,1) (5,1) (10,1) (2,4) (10,4) (6,5) (1,9) (5,9) (9,9)
to defined-tile-12 [xoff yoff]
 
  draw-obstacle pxcor xoff 2 pycor yoff 1
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 10 pycor yoff 1
  draw-obstacle pxcor xoff 2 pycor yoff 4
  draw-obstacle pxcor xoff 10 pycor yoff 4
  draw-obstacle pxcor xoff 6 pycor yoff 5
  draw-obstacle pxcor xoff 1 pycor yoff 9
  draw-obstacle pxcor xoff 5 pycor yoff 9
  draw-obstacle pxcor xoff 9 pycor yoff 9
 
end
 
;Holds the definition of tile-13.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(3,1) (4,1) (5,1) (6,1) (7,1) (8,1) (3,2) (4,2) (5,2) (6,2) (7,2)
;(8,2) (3,3) (4,3) (5,3) (6,3) (7,3) (8,3) (7,4) (8,4) (7,5) (8,5)
;(7,6) (8,6) (2,7) (3,7) (4,7) (7,7) (8,7) (2,8) (3,8) (4,8) (7,8)
;(8,8) (2,9) (3,9) (4,9) (7,9) (8,9) (7,10) (8,10) (7,11) (8,11)
to defined-tile-13 [xoff yoff]
 
  draw-obstacle pxcor xoff 3 pycor yoff 1
  draw-obstacle pxcor xoff 4 pycor yoff 1
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 7 pycor yoff 1
  draw-obstacle pxcor xoff 8 pycor yoff 1
  draw-obstacle pxcor xoff 3 pycor yoff 2
  draw-obstacle pxcor xoff 4 pycor yoff 2
  draw-obstacle pxcor xoff 5 pycor yoff 2
  draw-obstacle pxcor xoff 6 pycor yoff 2
  draw-obstacle pxcor xoff 7 pycor yoff 2
  draw-obstacle pxcor xoff 8 pycor yoff 2
  draw-obstacle pxcor xoff 3 pycor yoff 3
  draw-obstacle pxcor xoff 4 pycor yoff 3
  draw-obstacle pxcor xoff 5 pycor yoff 3
  draw-obstacle pxcor xoff 6 pycor yoff 3
  draw-obstacle pxcor xoff 7 pycor yoff 3
  draw-obstacle pxcor xoff 8 pycor yoff 3
  draw-obstacle pxcor xoff 7 pycor yoff 4
  draw-obstacle pxcor xoff 8 pycor yoff 4
  draw-obstacle pxcor xoff 7 pycor yoff 5
  draw-obstacle pxcor xoff 8 pycor yoff 5
  draw-obstacle pxcor xoff 7 pycor yoff 6
  draw-obstacle pxcor xoff 8 pycor yoff 6
  draw-obstacle pxcor xoff 2 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 7 pycor yoff 7
  draw-obstacle pxcor xoff 8 pycor yoff 7
  draw-obstacle pxcor xoff 2 pycor yoff 8
  draw-obstacle pxcor xoff 3 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 7 pycor yoff 8
  draw-obstacle pxcor xoff 8 pycor yoff 8
  draw-obstacle pxcor xoff 2 pycor yoff 9
  draw-obstacle pxcor xoff 3 pycor yoff 9
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 9
  draw-obstacle pxcor xoff 8 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 10
  draw-obstacle pxcor xoff 8 pycor yoff 10
  draw-obstacle pxcor xoff 7 pycor yoff 11
  draw-obstacle pxcor xoff 8 pycor yoff 11
 
end
 
;Holds the definition of tile-14.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(1,1) (1,2) (1,3) (1,4) (1,5) (1,6) (1,7) (1,8) (1,9) (1,10)
;(4,1) (4,2) (4,3) (4,4) (4,5) (4,6) (4,7) (4,8) (4,9) (4,10)
;(7,1) (7,2) (7,3) (7,4) (7,5) (7,6) (7,7) (7,8) (7,9) (7,10)
;(10,1) (10,2) (10,3) (10,4) (10,5) (10,6) (10,7) (10,8) (10,9)
;(10,10)
to defined-tile-14 [xoff yoff]
 
  draw-obstacle pxcor xoff 1 pycor yoff 1
  draw-obstacle pxcor xoff 1 pycor yoff 2
  draw-obstacle pxcor xoff 1 pycor yoff 3
  draw-obstacle pxcor xoff 1 pycor yoff 4
  draw-obstacle pxcor xoff 1 pycor yoff 5
  draw-obstacle pxcor xoff 1 pycor yoff 6
  draw-obstacle pxcor xoff 1 pycor yoff 7
  draw-obstacle pxcor xoff 1 pycor yoff 8
  draw-obstacle pxcor xoff 1 pycor yoff 9
  draw-obstacle pxcor xoff 1 pycor yoff 10
  draw-obstacle pxcor xoff 4 pycor yoff 1
  draw-obstacle pxcor xoff 4 pycor yoff 2
  draw-obstacle pxcor xoff 4 pycor yoff 2
  draw-obstacle pxcor xoff 4 pycor yoff 3
  draw-obstacle pxcor xoff 4 pycor yoff 4
  draw-obstacle pxcor xoff 4 pycor yoff 5
  draw-obstacle pxcor xoff 4 pycor yoff 6
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 4 pycor yoff 10
  draw-obstacle pxcor xoff 7 pycor yoff 1
  draw-obstacle pxcor xoff 7 pycor yoff 2
  draw-obstacle pxcor xoff 7 pycor yoff 3
  draw-obstacle pxcor xoff 7 pycor yoff 4
  draw-obstacle pxcor xoff 7 pycor yoff 5
  draw-obstacle pxcor xoff 7 pycor yoff 6
  draw-obstacle pxcor xoff 7 pycor yoff 7
  draw-obstacle pxcor xoff 7 pycor yoff 8
  draw-obstacle pxcor xoff 7 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 10
  draw-obstacle pxcor xoff 10 pycor yoff 1
  draw-obstacle pxcor xoff 10 pycor yoff 2
  draw-obstacle pxcor xoff 10 pycor yoff 3
  draw-obstacle pxcor xoff 10 pycor yoff 4
  draw-obstacle pxcor xoff 10 pycor yoff 5
  draw-obstacle pxcor xoff 10 pycor yoff 6
  draw-obstacle pxcor xoff 10 pycor yoff 7
  draw-obstacle pxcor xoff 10 pycor yoff 8
  draw-obstacle pxcor xoff 10 pycor yoff 9
  draw-obstacle pxcor xoff 10 pycor yoff 10
 
 
end
 
;Holds the definition of tile-15.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(4,3) (7,3) (3,4) (4,4) (7,4) (8,4) (2,5) (3,5) (4,5) (7,5) (8,5)
;(9,5)(2,7) (3,7) (4,7) (7,7) (8,7) (9,7) (3,8) (4,8) (7,8) (8,8)
; (4,9) (7,9)
to defined-tile-15 [xoff yoff]
 
  draw-obstacle pxcor xoff 4 pycor yoff 3
  draw-obstacle pxcor xoff 7 pycor yoff 3
  draw-obstacle pxcor xoff 3 pycor yoff 4
  draw-obstacle pxcor xoff 4 pycor yoff 4
  draw-obstacle pxcor xoff 7 pycor yoff 4
  draw-obstacle pxcor xoff 8 pycor yoff 4
  draw-obstacle pxcor xoff 2 pycor yoff 5
  draw-obstacle pxcor xoff 3 pycor yoff 5
  draw-obstacle pxcor xoff 4 pycor yoff 5
  draw-obstacle pxcor xoff 7 pycor yoff 5
  draw-obstacle pxcor xoff 8 pycor yoff 5
  draw-obstacle pxcor xoff 9 pycor yoff 5
  draw-obstacle pxcor xoff 2 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 7 pycor yoff 7
  draw-obstacle pxcor xoff 8 pycor yoff 7
  draw-obstacle pxcor xoff 9 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 8
  draw-obstacle pxcor xoff 7 pycor yoff 8
  draw-obstacle pxcor xoff 8 pycor yoff 8
  draw-obstacle pxcor xoff 4 pycor yoff 9
  draw-obstacle pxcor xoff 7 pycor yoff 9
 
 
end
 
;Holds the definition of tile-16.
;Whilst this tile will look the same wherever it appears in the
;game, an offset is needed so that all of the patches are drawn
;in their correct locations regardless of where they will appear.
;For clarity, the positions of the obstacles (before any offsets
;have been applied) are as follows:
;(2,1) (3,1) (4,1) (5,1) (6,1) (7,1) (8,1) (9,1) (2,4) (3,4) (4,4)
;(5,4) (6,4) (7,4) (8,4) (9,4) (2,7) (3,7) (4,7) (5,7) (6,7) (7,7)
;(8,7) (9,7) (2,10) (3,10) (4,10) (5,10) (6,10) (7,10) (8,10) (9,10)
to defined-tile-16 [xoff yoff]
 
  draw-obstacle pxcor xoff 2 pycor yoff 1
  draw-obstacle pxcor xoff 3 pycor yoff 1
  draw-obstacle pxcor xoff 4 pycor yoff 1
  draw-obstacle pxcor xoff 5 pycor yoff 1
  draw-obstacle pxcor xoff 6 pycor yoff 1
  draw-obstacle pxcor xoff 7 pycor yoff 1
  draw-obstacle pxcor xoff 8 pycor yoff 1
  draw-obstacle pxcor xoff 9 pycor yoff 1
  draw-obstacle pxcor xoff 2 pycor yoff 4
  draw-obstacle pxcor xoff 3 pycor yoff 4
  draw-obstacle pxcor xoff 4 pycor yoff 4
  draw-obstacle pxcor xoff 5 pycor yoff 4
  draw-obstacle pxcor xoff 6 pycor yoff 4
  draw-obstacle pxcor xoff 7 pycor yoff 4
  draw-obstacle pxcor xoff 8 pycor yoff 4
  draw-obstacle pxcor xoff 9 pycor yoff 4
  draw-obstacle pxcor xoff 2 pycor yoff 7
  draw-obstacle pxcor xoff 3 pycor yoff 7
  draw-obstacle pxcor xoff 4 pycor yoff 7
  draw-obstacle pxcor xoff 5 pycor yoff 7
  draw-obstacle pxcor xoff 6 pycor yoff 7
  draw-obstacle pxcor xoff 7 pycor yoff 7
  draw-obstacle pxcor xoff 8 pycor yoff 7
  draw-obstacle pxcor xoff 9 pycor yoff 7
  draw-obstacle pxcor xoff 2 pycor yoff 10
  draw-obstacle pxcor xoff 3 pycor yoff 10
  draw-obstacle pxcor xoff 4 pycor yoff 10
  draw-obstacle pxcor xoff 5 pycor yoff 10
  draw-obstacle pxcor xoff 6 pycor yoff 10
  draw-obstacle pxcor xoff 7 pycor yoff 10
  draw-obstacle pxcor xoff 8 pycor yoff 10
  draw-obstacle pxcor xoff 9 pycor yoff 10
 
end