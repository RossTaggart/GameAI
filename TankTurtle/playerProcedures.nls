;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;   Player Procedures    ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to updateGlobals 
    if (%playerFuelLevel < 0)
  [
    set %playerFuelLevel 0
  ]
  
    if (%playerFuelLevel > 100)
  [
    set %playerFuelLevel 100
  ]
  
    if (%playerHealth < 0)
  [
    set %playerHealth 0
  ]
  
    if (%playerHealth > 100)
  [
    set %playerHealth 100
  ]
end

to input-player  ;; Observer Procedure
  move-player
  eatFuel
  damagePlayer
  ;;shoot-missiles
  display
end

;;;;;;;;;;;;;;;;
;;player stuff;;
;;;;;;;;;;;;;;;;

to move-player
  if (action != 0)
    [
      if (%playerFuelLevel > 0)
      [
       if (action = 1)
         [ move-left ]
       if (action = 2)
         [ move-right ]
       if (action = 3)
         [ move-down ]
       if (action = 4)
         [ move-up ]
       set action 0
      ]
    ]
end

to move-left
  ask players with [xcor != min-pxcor]
    [ 
      set heading 270
      if [pcolor] of patch-ahead 1 = red
      [ set heading 270 ]
      if [pcolor] of patch-ahead 1 != red
      [ 
        fd 1 
        decrementFuel
      ]
      
    ]
end

to move-right
  ask players with [xcor != max-pxcor]
    [ 
      set heading 90
      if [pcolor] of patch-ahead 1 = red
      [ set heading 90 ]
      if [pcolor] of patch-ahead 1 != red
      [ 
        fd 1 
        decrementFuel
      ]
    ]
end

to move-up
  ask players with [ycor != max-pycor]
    [ 
      set heading 0
      if [pcolor] of patch-ahead 1 = red
      [ set heading 0 ]
      if [pcolor] of patch-ahead 1 != red
      [ 
        fd 1 
        decrementFuel
      ]
    ]
end

to move-down
  ask players with [ycor != min-pycor]
    [ 
      set heading 180
      if [pcolor] of patch-ahead 1 = red
      [ set heading 180 ]
      if [pcolor] of patch-ahead 1 != red
      [ 
        fd 1 
        decrementFuel
      ]
    ]
end

to eatFuel
  ask players
  [
    if any? fuels-here
    [
      ask fuels
      [
        if any? players-here
        [
          set %playerFuelLevel %playerFuelLevel + 25
          die
        ]
      ]
    ]
  ]
end

to decrementFuel
  if (%playerFuelLevel > 0)
  [
    set %playerFuelLevel %playerFuelLevel - 1
  ]
end

to damagePlayer
  ask players
  [
    if any? bombs-here
    [
      ask bombs
      [
        if any? players-here
        [
          set %playerHealth %playerHealth - 50
          if (%playerHealth = 0)
          [
            explodePlayerAnimation
            set dead? true
          ]
          
          if (%playerHealth != 0)
          [
            damagePlayerAnimation
          ]
          die
        ]
      ]
    ]
  ]
end

;; Creates the missiles which are fired by the player tank
to shoot
  create-missiles 1 
  [
    setxy ([xcor] of player 0) ([ycor] of player 0)
    set shape "missile"
    set heading [heading] of player 0
    set size 2.5
  ]
end

;;Actually makes the missiles move and destroys the missiles when they reach
;;patch 16 of any of the boundaries.
to shoot-missiles
  ask missiles
  [
    fd 1
    if xcor >= 16 or xcor <= -16 or ycor >= 16 or ycor <= -16 [die]
  ]
  
end
;;;;;;;;;;;;;;;;;;;;;
;;player animations;;
;;;;;;;;;;;;;;;;;;;;;

to explodePlayerAnimation
 ask players [set shape "tank_dead_1"]
 wait 0.2
  ask players [set shape "tank_dead_2"]
 wait 0.2
  ask players [set shape "tank_dead_3"]
 wait 0.2
  ask players [set shape "tank_dead_2"]
 wait 0.2
  ask players [set shape "tank_dead_1"]
 wait 0.2
 ask players [set shape "tank_dead"]
end

to damagePlayerAnimation
   ask players [set shape "tank_dead_1"]
 wait 0.2
   ask players [set shape "tank_dead_2"]
 wait 0.2
    ask players [set shape "tank_dead_1"]
 wait 0.2
  ask players [set shape "tank"]
end